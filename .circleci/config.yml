version: 2.1
# Define the jobs we want to run for this project

# Configuration
job_defaults_var: &job_defaults
  working_directory: ~/workspace/app
  docker:
    - image: circleci/node:12.0.0-browsers

# Yarn cache key
cache_var: &cache_key yarn-packages-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}

# Install yarn packages
yarn_install_var: &yarn_install
  run:
    name: Yarn Install Packages
    # We install deps based on the frozen yarn file, so we know it's always the same
    command: yarn install --frozen-lockfile --non-interactive

# Restore yarn cache
restore_cache_var: &restore_cache
  restore_cache:
    name: Restore Yarn Package Cache
    keys:
      - *cache_key
      - yarn-packages-v2-master
      - yarn-packages-v2

# Save yarn cache
save_cache_var: &save_cache
  save_cache:
    name: Save Yarn Package Cache
    key: *cache_key
    paths:
      - ~/.cache
      - node_modules

# Persist the whole working space so we can share it between jobs
persist_workspace_var: &persist_workspace
  persist_to_workspace:
    # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
    # taken to be the root directory of the workspace.
    root: ~/workspace
    # Must be relative path from root
    paths:
      - app

# Attach working space
attach_workspace_var: &attach_workspace
  attach_workspace:
    # Must be absolute path or relative path from working_directory
    at: ~/workspace

jobs:
  install:
    <<: *job_defaults
    steps:
      - run:
          name: Set NPM global path
          command: echo 'prefix = ~/.npm' > ~/.npmrc
      - checkout
      - run: ls
      - *restore_cache
      - *yarn_install
      - *save_cache

  client_build:
    <<: *job_defaults
    steps:
      - *attach_workspace
      - run: ls
      - run:
          name: Compile Client
          command: yarn client:build

# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/

      - client_build:
          requires:
            - install
